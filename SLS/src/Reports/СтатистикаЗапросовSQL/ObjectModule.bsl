
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	КоличествоПервых = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КоличествоПервых")).Значение;
	
	УпорядочитьПО = Новый Массив();
	
	Для Каждого ОписаниеПоляПорядка Из НастройкиОтчета.Порядок.Элементы Цикл
		
		Если НЕ ОписаниеПоляПорядка.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяПоля = Строка(ОписаниеПоляПорядка.Поле);
		Если ОписаниеПоляПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв Тогда
			ИмяПоля = ИмяПоля + " УБЫВ";
		КонецЕсли;
		
		УпорядочитьПО.Добавить(ИмяПоля);
		
	КонецЦикла;
	
	Если УпорядочитьПО.Количество() = 0 Тогда
		УпорядочитьПО.Добавить("total_worker_time");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросСКД(КоличествоПервых, УпорядочитьПО);
	ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = ТекстЗапроса;
	
КонецПроцедуры


Функция ТекстЗапросСКД(КоличествоЗапросов, УпорядочитьПО)
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 10
	|	СтатистикаПоЗапросамSQL.СерверSQL КАК СерверSQL,
	|	СтатистикаПоЗапросамSQL.ЗапросSQL КАК ЗапросSQL,
	|	СтатистикаПоЗапросамSQL.dbname КАК dbname,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.ДатаСбора) КАК ДатаСбора,
	|	СУММА(СтатистикаПоЗапросамSQL.plan_generation_num) КАК plan_generation_num,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.creation_time) КАК creation_time,
	|	СУММА(СтатистикаПоЗапросамSQL.execution_count) КАК execution_count,
	|	СУММА(СтатистикаПоЗапросамSQL.total_worker_time) КАК total_worker_time,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_worker_time) КАК min_worker_time,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_worker_time) КАК max_worker_time,
	|	СУММА(СтатистикаПоЗапросамSQL.total_physical_reads) КАК total_physical_reads,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_physical_reads) КАК max_physical_reads,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_physical_reads) КАК min_physical_reads,
	|	СУММА(СтатистикаПоЗапросамSQL.total_logical_reads) КАК total_logical_reads,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_logical_reads) КАК min_logical_reads,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_logical_reads) КАК max_logical_reads,
	|	СУММА(СтатистикаПоЗапросамSQL.total_logical_writes) КАК total_logical_writes,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_logical_writes) КАК min_logical_writes,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_logical_writes) КАК max_logical_writes,
	|	СУММА(СтатистикаПоЗапросамSQL.total_elapsed_time) КАК total_elapsed_time,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_elapsed_time) КАК min_elapsed_time,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_elapsed_time) КАК max_elapsed_time,
	|	СУММА(СтатистикаПоЗапросамSQL.total_rows) КАК total_rows,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_rows) КАК min_rows,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_rows) КАК max_rows,
	|	СУММА(СтатистикаПоЗапросамSQL.total_dop) КАК total_dop,
	|	МИНИМУМ(СтатистикаПоЗапросамSQL.min_dop) КАК min_dop,
	|	МАКСИМУМ(СтатистикаПоЗапросамSQL.max_dop) КАК max_dop,
	|	СУММА(СтатистикаПоЗапросамSQL.ВариантовЗапроса) КАК ВариантовЗапроса,
	|	СУММА(СтатистикаПоЗапросамSQLОбщиеДанные.total_elapsed_time) КАК sum_total_elapsed_time,
	|	СУММА(СтатистикаПоЗапросамSQLОбщиеДанные.total_worker_time) КАК sum_total_worker_time,
	|	СУММА(СтатистикаПоЗапросамSQLОбщиеДанные.total_physical_reads) КАК sum_total_physical_reads,
	|	СУММА(СтатистикаПоЗапросамSQLОбщиеДанные.total_logical_reads) КАК sum_total_logical_reads,
	|	СУММА(СтатистикаПоЗапросамSQLОбщиеДанные.total_logical_writes) КАК sum_total_logical_writes,
	|	СУММА(СтатистикаПоЗапросамSQLОбщиеДанные.ВсегоЗапросов) КАК sum_ВсегоЗапросов,
	|	ПОДСТРОКА(СтатистикаПоЗапросамSQL.ЗапросSQL.текстЗапросаSQL, 1, 1024) КАК текстЗапросаSQL,
	|	ПОДСТРОКА(СтатистикаПоЗапросамSQL.ЗапросSQL.текстЗапроса1С, 1, 1024) КАК текстЗапроса1С,
	|	СтатистикаПоЗапросамSQL.ЗапросSQL.commad КАК commad,
	|	СтатистикаПоЗапросамSQL.ЗапросSQL.Комментарий КАК Комментарий
	|ИЗ
	|	РегистрСведений.СтатистикаПоЗапросамSQL КАК СтатистикаПоЗапросамSQL
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатистикаПоЗапросамSQLОбщиеДанные КАК СтатистикаПоЗапросамSQLОбщиеДанные
	|		ПО СтатистикаПоЗапросамSQL.СерверSQL = СтатистикаПоЗапросамSQLОбщиеДанные.СерверSQL
	|			И СтатистикаПоЗапросамSQL.ДатаСбора = СтатистикаПоЗапросамSQLОбщиеДанные.ДатаСбора
	|ГДЕ
	|	СтатистикаПоЗапросамSQL.СерверSQL = &СерверSQL
	|	И СтатистикаПоЗапросамSQL.ДатаСбора >= &ДатаНач
	|	И СтатистикаПоЗапросамSQL.ДатаСбора <= &ДатаКон
	|{ГДЕ
	|	СтатистикаПоЗапросамSQL.СерверSQL.* КАК СерверSQL,
	|	СтатистикаПоЗапросамSQL.ДатаСбора,
	|	СтатистикаПоЗапросамSQL.dbname}
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатистикаПоЗапросамSQL.СерверSQL,
	|	СтатистикаПоЗапросамSQL.ЗапросSQL,
	|	СтатистикаПоЗапросамSQL.dbname,
	|	СтатистикаПоЗапросамSQL.ЗапросSQL.commad,
	|	СтатистикаПоЗапросамSQL.ЗапросSQL.Комментарий,
	|	ПОДСТРОКА(СтатистикаПоЗапросамSQL.ЗапросSQL.текстЗапросаSQL, 1, 1024),
	|	ПОДСТРОКА(СтатистикаПоЗапросамSQL.ЗапросSQL.текстЗапроса1С, 1, 1024)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 10", "ПЕРВЫЕ " + Формат(КоличествоЗапросов, "ЧГ="));
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	"
	+ СтрСоединить(УпорядочитьПО,
		"
		|	");
	
	
	Возврат ТекстЗапроса;
	
КонецФункции