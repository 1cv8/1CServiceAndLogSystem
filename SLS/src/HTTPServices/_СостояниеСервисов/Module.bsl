
// Тест наличия сервиса в базе
Функция ТестGET(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "text/html; charset=UTF-8");
	Ответ.Заголовки.Вставить("Cache-Control", "no-cache");
	
	Ответ.УстановитьТелоИзСтроки("OK");
	
	Возврат Ответ;
	
КонецФункции

Функция РегламентныеЗаданияGET(Запрос)
	
	Попытка
	
		МассивРезультат = Новый Массив;

		ТекущиеЗадания = РегламентныеЗадания.ПолучитьРегламентныеЗадания();
		Для Каждого Задание Из ТекущиеЗадания Цикл
			
			ПараметрыРеглЗадания = Новый Структура("ИмяПользователя, ИнтервалПовтораПриАварийномЗавершении, Использование, Ключ, КоличествоПовторовПриАварийномЗавершении, Наименование, Предопределенное, УникальныйИдентификатор");
			ЗаполнитьЗначенияСвойств(ПараметрыРеглЗадания, Задание);
			
			ПараметрыМетаданныхРеглЗадания = Новый Структура("Имя, Синоним, Комментарий, ИмяМетода");
			Если Задание.Метаданные <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(ПараметрыМетаданныхРеглЗадания, Задание.Метаданные);
			КонецЕсли;
			ПараметрыРеглЗадания.Вставить("Метаданные", ПараметрыМетаданныхРеглЗадания);
			
			СтруктураПоследнееЗадание = Новый Структура("ИмяМетода, ИнформацияОбОшибке, Ключ, Начало, Конец, Наименование, Состояние, УникальныйИдентификатор");
			Если Задание.ПоследнееЗадание <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоследнееЗадание, Задание.ПоследнееЗадание);
			КонецЕсли;
			ПараметрыРеглЗадания.Вставить("ПоследнееЗадание", СтруктураПоследнееЗадание);
			
			МассивРезультат.Добавить(ПараметрыРеглЗадания);
			
		КонецЦикла;

		
		СтруктураРезультат = Новый Структура("val", МассивРезультат);
		
		СтрокаJSON = _ОбщиеФункцииHTTPСервисов.СериализоватьВJSON(СтруктураРезультат);
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(СтрокаJSON, КодировкаТекста.UTF8);
		Ответ.Заголовки.Вставить("Content-Type","application/json");
		Ответ.Заголовки.Вставить("Content-Language", "ru");
		Ответ.Заголовки.Вставить("Content-Charset", "utf-8");
	
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-Type", "text/html; charset=UTF-8");
		Ответ.УстановитьТелоИзСтроки(ПодробноеПредставлениеОшибки(ИнфоОбОшибке));
	КонецПопытки;
	
	Возврат Ответ;
	
КонецФункции

Функция РегламентноеЗаданиеGET(Запрос)
	
	Попытка
			
		ID = СокрЛП(Запрос.ПараметрыURL["ID"]);

		Задание = РегламентныеЗаданияСервер.Задание(ID);
		Если Задание = Неопределено Тогда
			
			Ответ = Новый HTTPСервисОтвет(404);
			Ответ.Заголовки.Вставить("Content-Type", "text/html; charset=UTF-8");
			Ответ.УстановитьТелоИзСтроки("Не найдено задание с идентификатором: " + ID);
			Возврат Ответ;
			
		КонецЕсли;
		
		
		ПараметрыРеглЗадания = Новый Структура("ИмяПользователя, ИнтервалПовтораПриАварийномЗавершении, Использование, Ключ, КоличествоПовторовПриАварийномЗавершении, Наименование, Предопределенное, УникальныйИдентификатор");
		//Параметры, Метаданные, ПоследнееЗадание, Расписание
		ЗаполнитьЗначенияСвойств(ПараметрыРеглЗадания, Задание);
		
		ПараметрыМетаданныхРеглЗадания = Новый Структура("Имя, Синоним, Комментарий, ИмяМетода");
		Если Задание.Метаданные <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ПараметрыМетаданныхРеглЗадания, Задание.Метаданные);
		КонецЕсли;
		ПараметрыРеглЗадания.Вставить("Метаданные", ПараметрыМетаданныхРеглЗадания);
		
		СтруктураПоследнееЗадание = Новый Структура("ИмяМетода, ИнформацияОбОшибке, Ключ, Начало, Конец, Наименование, Состояние, УникальныйИдентификатор");
		Если Задание.ПоследнееЗадание <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоследнееЗадание, Задание.ПоследнееЗадание);
		КонецЕсли;
		ПараметрыРеглЗадания.Вставить("ПоследнееЗадание", СтруктураПоследнееЗадание);
		
		
		СтрокаJSON = _ОбщиеФункцииHTTPСервисов.СериализоватьВJSON(ПараметрыРеглЗадания);
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(СтрокаJSON, КодировкаТекста.UTF8);
		Ответ.Заголовки.Вставить("Content-Type","application/json");
		Ответ.Заголовки.Вставить("Content-Language", "ru");
		Ответ.Заголовки.Вставить("Content-Charset", "utf-8");
		
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-Type", "text/html; charset=UTF-8");
		Ответ.УстановитьТелоИзСтроки(ПодробноеПредставлениеОшибки(ИнфоОбОшибке));
	КонецПопытки;
	
	Возврат Ответ;

КонецФункции
