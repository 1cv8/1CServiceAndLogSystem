
Функция ПроверитьКорректностьСтруктуры(Документ, ПараметрыПисьма) Экспорт
	
	Результат = Ложь;
	ТекстОшибки ="";
	
	МетаданныеУС_Очередь = Метаданные.РегистрыСведений.УС_ОчередьПочта.Реквизиты;
	Для Каждого ТекущаяСтрока Из МетаданныеУС_Очередь Цикл
		Если НЕ ПараметрыПисьма.Свойство(ТекущаяСтрока.Имя) Тогда
			Результат = Истина;
			ТекстОшибки = ТекстОшибки + "Очередь писем. Не найден обязательный реквизит: "+ТекущаяСтрока.Имя + Символы.ПС;
		КонецЕсли;			
	КонецЦикла;
	
	Если Результат Тогда 
		Сообщить(ТекстОшибки);	
		ЗаписьЖурналаРегистрации("Ошибка очередь почта",УровеньЖурналаРегистрации.Ошибка,,Документ,ТекстОшибки);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция  ПолучитьСтруктуруОчередьПочта() Экспорт 
	
	СтруктураПисьма = Новый Структура;
	МетаданныеУС_Очередь = Метаданные.РегистрыСведений.УС_ОчередьПочта.Реквизиты;
	Для Каждого ТекущаяСтрока Из МетаданныеУС_Очередь Цикл
		СтруктураПисьма.Вставить(ТекущаяСтрока.Имя,Неопределено); 		
	КонецЦикла;
	
	МетаданныеУС_Очередь = Метаданные.РегистрыСведений.УС_ОчередьПочта.Измерения;
	Для Каждого ТекущаяСтрока Из МетаданныеУС_Очередь Цикл
		СтруктураПисьма.Вставить(ТекущаяСтрока.Имя,Неопределено); 		
	КонецЦикла;
	
	МетаданныеУС_Очередь = Метаданные.РегистрыСведений.УС_ОчередьПочта.Ресурсы;
	Для Каждого ТекущаяСтрока Из МетаданныеУС_Очередь Цикл
		СтруктураПисьма.Вставить(ТекущаяСтрока.Имя,Неопределено); 		
	КонецЦикла;
	
	возврат СтруктураПисьма; 	
	
КонецФункции

Процедура СоздатьЗапись(Документ, ПараметрыПисьма) Экспорт
	
	Если ПроверитьКорректностьСтруктуры(Документ, ПараметрыПисьма) Тогда
		Возврат;	
	КонецЕсли;
	
	НовЗап = РегистрыСведений.УС_ОчередьПочта.СоздатьМенеджерЗаписи();	
	ЗаполнитьЗначенияСвойств(НовЗап,ПараметрыПисьма);
	НовЗап.Период = ТекущаяДата();
	НовЗап.Документ = Документ;
	НовЗап.УникальныйИдентификатор = Новый УникальныйИдентификатор;
	НовЗап.Записать(истина);
	
КонецПроцедуры

Функция АдресEmailЗаполнен(Знач Адрес)
	
	Если НЕ ЗначениеЗаполнено(Адрес) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Адрес = СокрЛП(Адрес);
	
	Если Адрес = "@" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция СоздатьЗаписьИзСообщения(Сообщение, Документ = Неопределено, КогдаОтправить = Неопределено, Отправлено = Ложь,
	ПутьКФайлу = Неопределено, ИмяСохраняемогоФайла = Неопределено, ОтправкаCDO = Ложь, ОтветКому = "", АдресОтправителя = "", ИдентификаторыОснований = "") Экспорт
	
	Если ТИПЗНЧ(Сообщение) <> Тип("ИнтернетПочтовоеСообщение") Тогда
		Сообщить("Ошибка. Сообщение <> ИнтернетПочтовоеСообщение!");
		Возврат Неопределено;
	КонецЕсли;
	
	НовЗап = РегистрыСведений.УС_ОчередьПочта.СоздатьМенеджерЗаписи();	
	НовЗап.Период = МониторингПереопределяемыйВызовСервера.ПолучитьСерверноеВремя();
	НовЗап.УникальныйИдентификатор = Новый УникальныйИдентификатор;
	Если ЗначениеЗаполнено(Документ) Тогда
		НовЗап.Документ = Документ;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(АдресОтправителя) Тогда
		НовЗап.Отправитель = Сообщение.Отправитель.Адрес;
	Иначе
		НовЗап.Отправитель = АдресОтправителя;
	КонецЕсли;
	
	Если КогдаОтправить = Неопределено Тогда
		КогдаОтправить = МониторингПереопределяемыйВызовСервера.ПолучитьСерверноевремя();
	КонецЕсли;
	НовЗап.КогдаОтправить = КогдаОтправить;	
	
	Кому = "";
	Для каждого стр из Сообщение.Получатели Цикл
		
		Если НЕ АдресEmailЗаполнен(стр.Адрес) Тогда
			Продолжить;
		КонецЕсли;
		
		Кому = Кому + стр.Адрес+"; ";
	КонецЦикла;	
	НовЗап.АдресатДоставки = Кому;
	
	//Копии
	Копии = "";
	Для каждого стр из Сообщение.Копии Цикл
		
		Если НЕ АдресEmailЗаполнен(стр.Адрес) Тогда
			Продолжить;
		КонецЕсли;
		
		Копии = Копии + стр.Адрес+"; ";
	КонецЦикла;	
	НовЗап.Копии = Копии;
	
	//Скрытые
	Скрытые = "";
	Для каждого стр из Сообщение.СлепыеКопии Цикл
		Скрытые = Скрытые + стр.Адрес+"; ";	
	КонецЦикла;	
	НовЗап.СкрытыеКопии = Скрытые;
	
	НовЗап.Тема = Сообщение.Тема;
	
	Если Сообщение.Тексты.Количество() > 0 Тогда
		НовЗап.Текст = Сообщение.Тексты[0].Текст;
	КонецЕсли;
	
	//Признак отправлено, для того чтобы была возможность сохранить письмо без отправки
	НовЗап.Отправлено = Отправлено; 
	НовЗап.ПредставлениеОтправителя = Сообщение.Отправитель.ОтображаемоеИмя; 
	
	Если Сообщение.Вложения.Количество() > 0 Тогда
		ИмяАрхивногоФайла = ПолучитьИмяВременногоФайла("zip");
		ВрФайл = Новый Файл(ИмяАрхивногоФайла);
		ПутьСохр = ВрФайл.Путь;
		// Создадим объект записи ZIP-архива
		ЗаписьZIP = Новый ЗаписьZipФайла(ИмяАрхивногоФайла,,,МетодСжатияZIP.BZIP2,УровеньСжатияZIP.Оптимальный);
		ИменаФайлов = Новый Массив;
		
		ФайлСуществует = "";
		Для Каждого файл Из Сообщение.Вложения Цикл
			файл.Данные.Записать(ПутьСохр+файл.Имя);
			ИменаФайлов.Добавить(ПутьСохр+файл.Имя);
			// Добавим необходимые файлы в архив
			Если ФайлСуществует = ПутьСохр+файл.Имя Тогда
				Продолжить;
			КонецЕсли;
			ЗаписьZIP.Добавить(ПутьСохр+файл.Имя, РежимСохраненияПутейZIP.НеСохранятьПути);
			ФайлСуществует = ПутьСохр+файл.Имя;
		КонецЦикла;

		// Запишем архив на диск
		ЗаписьZIP.Записать();
		ФайлАрхив = Новый ДвоичныеДанные(ИмяАрхивногоФайла);
		НовЗап.Вложения = Новый ХранилищеЗначения(ФайлАрхив);
	КонецЕсли;
	
	Если ПутьКФайлу <> Неопределено Тогда
		НовЗап.ПутьКФайлу = ПутьКФайлу;
	КонецЕсли;
	
	Если ИмяСохраняемогоФайла <> Неопределено Тогда
		НовЗап.ИмяСохраняемогоФайла = ИмяСохраняемогоФайла;
	КонецЕсли;
	
	НовЗап.ОтправкаCDO = ОтправкаCDO;
	НовЗап.ОтветКому = ОтветКому;
	
	НовЗап.ИдентификаторыОснований = ИдентификаторыОснований;
	
	НовЗап.Записать();
	Если Сообщение.Вложения.Количество() > 0 Тогда
		ЗаписьZIP = Неопределено;
		УдалитьФайлы(ИмяАрхивногоФайла);
		Для Каждого стр из ИменаФайлов Цикл
			УдалитьФайлы(стр);	
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ _МАА_Процедуры.ЭтоРабочаяБаза() Тогда
		
		ДанныеПисем = Новый Массив;
		ДанныеПисем.Добавить(НовЗап);
		
		ОтправитьПисьма(ДанныеПисем);
		
	КонецЕсли;
	
	Возврат НовЗап.УникальныйИдентификатор;
	
КонецФункции

Процедура ОтправитьПисьма(Данные, ИгнорироватьПопыткиОтправки = Ложь) Экспорт
	
	Для каждого ВыделенСтр из Данные Цикл
		
		ПисьмоОтправлено = Ложь;	
		Отправитель = ВыделенСтр.Отправитель;
		Кому = ВыделенСтр.АдресатДоставки;
		Копии = ВыделенСтр.Копии;
		СкрытыеКопии = ВыделенСтр.СкрытыеКопии;
		Тема= ВыделенСтр.Тема;
		ТекстПисьма = ВыделенСтр.Текст;
		ПредставлениеОтправителя = ВыделенСтр.ПредставлениеОтправителя;
		
		ПутьКФайлу					= ВыделенСтр.ПутьКФайлу;
		ИмяСохраняемогоФайла		= ВыделенСтр.ИмяСохраняемогоФайла;
		ОтправкаCDO					= ВыделенСтр.ОтправкаCDO;
		ОтветКому					= ВыделенСтр.ОтветКому;
		
		Если НЕ ИгнорироватьПопыткиОтправки Тогда
			
			КоличествоПопытокОтправки	= ВыделенСтр.КоличествоПопытокОтправки;
			ДатаПопыткиОтправки			= ВыделенСтр.ДатаПопыткиОтправки;
			
			Если КоличествоПопытокОтправки > 15 Тогда
				ТекстСообщения = "Превышено количество попыток отправки письма";
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;
			
			Если КоличествоПопытокОтправки > 1 Тогда
				ПаузаОтправки = (КоличествоПопытокОтправки-1)*600;
				Если ТекущаяДата() < (ДатаПопыткиОтправки + ПаузаОтправки) Тогда
					ТекстСообщения = "Пауза при повторной отправки письма до " + (ДатаПопыткиОтправки + ПаузаОтправки);
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Струк = Новый Структура;
		Струк.Вставить("Период", ВыделенСтр.Период); 
		Струк.Вставить("Документ", ВыделенСтр.Документ); 
		Струк.Вставить("УникальныйИдентификатор", ВыделенСтр.УникальныйИдентификатор); 
		Вложения = ПолучитьХранилище(Струк);//ВыделенСтр.Вложения.ПолучитьФайлы();
		Если ТИПЗНЧ(Вложения) <> Тип("ХранилищеЗначения") Тогда
			Сообщить("Не удалось получить ХранилищеЗначения");
			Возврат;	
		КонецЕсли;
		
		Файл = Вложения.Получить();
		МФайлов = Новый Массив;
		
		Если Файл <> Неопределено Тогда
			
			Если ТипЗнч(Файл) = Тип("Массив") Тогда				
				
				МФайлов = Новый Массив;
				СтрСтруктФайла = "ПолноеИмя";				
				Для Каждого Элфайл Из Файл Цикл 
					МФайлов.Добавить(Новый Структура(СтрСтруктФайла, Элфайл));
				КонецЦикла;
				
			Иначе 
				ИмяФайла = ПолучитьИмяВременногоФайла("zip");
				Файл.Записать(ИмяФайла);
				
				//Разархивируем
				ТЕМПКаталог = КаталогВременныхФайлов()+Строка(Новый УникальныйИдентификатор);
				СоздатьКаталог(ТЕМПКаталог);
				Попытка
					ЧтениеZIP = Новый ЧтениеZipФайла(ИмяФайла);
					ЧтениеZIP.ИзвлечьВсе(ТЕМПКаталог, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
					МФайлов = НайтиФайлы(ТЕМПКаталог,"*.*");
				Исключение
					Сообщить("Не удалось распаковать архив. "+Строка(ИмяФайла));
					МФайлов = Новый Массив;
				КонецПопытки;
				
			КонецЕсли;

		КонецЕсли;
		
		Сообщение = Новый ИнтернетПочтовоеСообщение;
		Сообщение.Отправитель.Адрес = Отправитель;
		
		Если ЗначениеЗаполнено(ПредставлениеОтправителя) Тогда
			Сообщение.Отправитель.ОтображаемоеИмя = ПредставлениеОтправителя;
			Сообщение.ИмяОтправителя = ПредставлениеОтправителя;
			Если Найти(Отправитель, "lyncmail.net") > 0 Тогда
				Сообщение.Отправитель.Адрес = ПредставлениеОтправителя + " <"+Сообщение.Отправитель.Адрес+">";
			КонецЕсли;
		КонецЕсли;	
		
		Текст = Сообщение.Тексты.Добавить();
		Текст.Текст = ТекстПисьма;
		Сообщение.Тема = Тема;
		
		//заменяем , на ; в е-маил
		Кому = СтрЗаменить(Кому,",", ";");
		
		МКому = СтрРазделить(Кому, ";", Ложь);
		Для каждого стр из МКому Цикл
			стр = СокрЛП(стр);
			Если НЕ ЗначениеЗаполнено(стр) Тогда Продолжить; КонецЕсли;
			Сообщение.Получатели.Добавить(стр);
		КонецЦикла;
		
		Если ЗначениеЗаполнено(Копии) Тогда
			МКопии = СтрРазделить(Копии, ";", Ложь);	
			Для каждого стр из МКопии Цикл
				стр = СокрЛП(стр);
				Если НЕ ЗначениеЗаполнено(стр) Тогда Продолжить; КонецЕсли;
				Сообщение.Копии.Добавить(стр);
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СкрытыеКопии) Тогда
			МСкрытыеКопии = СтрРазделить(СкрытыеКопии, ";", Ложь);
			Для каждого стр из МСкрытыеКопии Цикл
				стр = СокрЛП(стр);
				Если НЕ ЗначениеЗаполнено(стр) Тогда Продолжить; КонецЕсли;
				Сообщение.СлепыеКопии.Добавить(стр);
			КонецЦикла;
		КонецЕсли;
		
		Для каждого файл из МФайлов Цикл
			Сообщение.Вложения.Добавить(файл.ПолноеИмя);
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(ВыделенСтр.ИдентификаторыОснований) Тогда
			Сообщение.УстановитьПолеЗаголовка("References", ВыделенСтр.ИдентификаторыОснований);
		КонецЕсли;		
		
		Попытка
			Если Найти(Отправитель, "lancetpharm.ru") > 0 Тогда 
				ПисьмоОтправлено = _Почта.ОтправкаПочты(Сообщение,, ПутькФайлу, ИмяСохраняемогоФайла, Ложь, Истина);
			ИначеЕсли Найти(Отправитель, "@cordisline.ru") > 0 Тогда 
				ПисьмоОтправлено = _Почта.ОтправкаПочты(Сообщение,, ПутькФайлу, ИмяСохраняемогоФайла, Ложь, Истина);
			ИначеЕсли Найти(Отправитель, "lyncmail.net") > 0 Тогда 
				ПисьмоОтправлено = _Почта.ОтправкаПочтыLyncНовый(Сообщение,, ПутьКФайлу,, ИмяСохраняемогоФайла);
			КонецЕсли;	
		Исключение
			ПисьмоОтправлено = Ложь;
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
		
		ИдентификаторСообщения = Сообщение.ИдентификаторСообщения;
		
		Попытка
			Сообщение = Новый ИнтернетПочтовоеСообщение;
			УдалитьФайлы(ИмяФайла);	
			УдалитьФайлы(ТЕМПКаталог);
		Исключение
		КонецПопытки;

		НаборЗаписей = РегистрыСведений.УС_ОчередьПочта.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ВыделенСтр.Период);
		//НаборЗаписей.Отбор.Документ.Установить(ВыделенСтр.Документ);
		НаборЗаписей.Отбор.УникальныйИдентификатор.Установить(ВыделенСтр.УникальныйИдентификатор);
		НаборЗаписей.Прочитать();
		
		Если ПисьмоОтправлено Тогда
			Для каждого стр из НаборЗаписей Цикл
				стр.Отправлено = Истина;
				стр.ИдентификаторСообщения = ИдентификаторСообщения;
			КонецЦикла;
		Иначе
			Для каждого стр из НаборЗаписей Цикл
				Если НЕ стр.Отправлено Тогда
					стр.КоличествоПопытокОтправки	= стр.КоличествоПопытокОтправки + 1;
					стр.ДатаПопыткиОтправки			= ТекущаяДата();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры	

Функция ПолучитьХранилище(Струк)
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УС_ОчередьПочта.Вложения
		|ИЗ
		|	РегистрСведений.УС_ОчередьПочта КАК УС_ОчередьПочта
		|ГДЕ
		|	УС_ОчередьПочта.Период = &Период
		|	И УС_ОчередьПочта.Документ = &Документ";
	Запрос.УстановитьПараметр("Документ", Струк.Документ);
	Запрос.УстановитьПараметр("Период", Струк.Период);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Вложения;
	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции

Функция ЭтоКорректныйАдресПочты(Знач Адрес) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Адрес) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(Адрес) < 6 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрНайти(Адрес, "@") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПересобратьСтрокуАдреса(Знач АдресаДоставки) Экспорт
	
	АдресаРезультат = "";
	Если ПустаяСтрока(АдресаДоставки) Тогда
		Возврат АдресаРезультат;
	КонецЕсли;
	
	АдресаДоставки = СтрЗаменить(АдресаДоставки,",", ";");
	МассивАдресов = СтрРазделить(АдресаДоставки, ";", Ложь);
	МассивАдресовРезультат = Новый Массив;
	
	Для каждого Адрес из МассивАдресов Цикл
		
		Адрес = СтрЗаменить(Адрес, " ", "");
		
		Если НЕ РегистрыСведений.УС_ОчередьПочта.ЭтоКорректныйАдресПочты(Адрес) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивАдресовРезультат.Добавить(Адрес);
		
	КонецЦикла;
	
	Если МассивАдресовРезультат.Количество() = 0 Тогда
		Возврат АдресаРезультат;
	КонецЕсли;
	
	АдресаРезультат = СтрСоединить(АдресаРезультат, ";");
	
	Возврат АдресаРезультат;
	
КонецФункции

Функция ДубльРассылки(СсылкаДок = "", Получатели, Тема, ЗаПериод = 10) Экспорт
	
	Кому = "";
	Для Каждого Стр из Получатели Цикл
		Если НЕ АдресEmailЗаполнен(стр.Адрес) Тогда
			Продолжить;
		КонецЕсли;
		Кому = Кому + стр.Адрес+"; ";
	КонецЦикла;	
	АдресатДоставки = Кому;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УС_ОчередьПочтаСрезПоследних.Тема КАК Тема
		|ИЗ
		|	РегистрСведений.УС_ОчередьПочта.СрезПоследних(
		|			,
		|			АдресатДоставки ПОДОБНО &АдресатДоставки
		|				И Тема = &Тема
		|				И Документ = &Документ) КАК УС_ОчередьПочтаСрезПоследних
		|ГДЕ
		|	УС_ОчередьПочтаСрезПоследних.Период >= &ПериодПроверки";
	
	Запрос.УстановитьПараметр("АдресатДоставки", АдресатДоставки);
	Запрос.УстановитьПараметр("ПериодПроверки", МониторингПереопределяемыйВызовСервера.ПолучитьСерверноевремя()-ЗаПериод);  // За последние 10 сек
	Запрос.УстановитьПараметр("Тема", Тема);
	Запрос.УстановитьПараметр("Документ", СсылкаДок);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;
	
КонецФункции
