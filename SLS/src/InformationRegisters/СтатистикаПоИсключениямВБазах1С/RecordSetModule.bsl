
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ДополнительныеСвойства.Свойство("Служебный_ОбработкаОбъекта") Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ДанныеИзменений", Новый Структура);
	
	Если НЕ Замещение Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДополнительныеСвойства.ДанныеИзменений.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.База1С КАК База1С,
	|	ДанныеРегистра.Исключение КАК Исключение,
	|	ДанныеРегистра.Решение КАК Решение,
	|	ДанныеРегистра.ДатаИсправления КАК ДатаИсправления,
	|	ДанныеРегистра.РанееИсправлялось КАК РанееИсправлялось
	|ПОМЕСТИТЬ ВТ_ДанныеРегистра_Было
	|ИЗ
	|	РегистрСведений.СтатистикаПоИсключениямВБазах1С КАК ДанныеРегистра
	|ГДЕ
	|	&ТекстУсловий";
	
	МассивУсловий = _ОбщегоНазначения.УсловияЗапросаПоНаборуЗаписей(ЭтотОбъект, Запрос, "ДанныеРегистра");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстУсловий", СтрСоединить(МассивУсловий, Символы.ПС + "	И "));
	
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ДополнительныеСвойства.Свойство("Служебный_ОбработкаОбъекта") Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("ДанныеИзменений") Тогда
		
		ЗаписатьИзмененияВИсторию();
		
	КонецЕсли;

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаписатьИзмененияВИсторию()
	
	ДанныеИзменений = ДополнительныеСвойства.ДанныеИзменений;
	
	ЕстьДанныеБыло = Ложь;
	Если ДанныеИзменений.Свойство("МенеджерВременныхТаблиц") Тогда
		ЕстьДанныеБыло = Истина;
		МенеджерВременныхТаблиц = ДанныеИзменений.МенеджерВременныхТаблиц;
	Иначе
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	МассивТекстовЗапроса = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.База1С КАК База1С,
	|	ДанныеРегистра.Исключение КАК Исключение,
	|	ДанныеРегистра.Решение КАК Решение,
	|	ДанныеРегистра.ДатаИсправления КАК ДатаИсправления,
	|	ДанныеРегистра.РанееИсправлялось КАК РанееИсправлялось
	|ПОМЕСТИТЬ ВТ_ДанныеРегистра_Стало
	|ИЗ
	|	РегистрСведений.СтатистикаПоИсключениямВБазах1С КАК ДанныеРегистра
	|ГДЕ
	|	&ТекстУсловий";
	
	МассивУсловий = _ОбщегоНазначения.УсловияЗапросаПоНаборуЗаписей(ЭтотОбъект, Запрос, "ДанныеРегистра");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстУсловий", СтрСоединить(МассивУсловий, Символы.ПС + "	И "));
	
	Если НЕ ЕстьДанныеБыло Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТ_ДанныеРегистра_Стало", "");
	КонецЕсли;
	
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	ИндексРезультата = МассивТекстовЗапроса.Количество() - 1;
	
	Если ЕстьДанныеБыло Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТ_ДанныеРегистра.База1С КАК База1С,
		|	ВТ_ДанныеРегистра.Исключение КАК Исключение,
		|	ВТ_ДанныеРегистра.Решение КАК Решение,
		|	ВТ_ДанныеРегистра.ДатаИсправления КАК ДатаИсправления,
		|	ВТ_ДанныеРегистра.РанееИсправлялось КАК РанееИсправлялось,
		|	СУММА(ВТ_ДанныеРегистра.Дельта) КАК Дельта
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеРегистра_Было.База1С КАК База1С,
		|		ВТ_ДанныеРегистра_Было.Исключение КАК Исключение,
		|		ВТ_ДанныеРегистра_Было.Решение КАК Решение,
		|		ВТ_ДанныеРегистра_Было.ДатаИсправления КАК ДатаИсправления,
		|		ВТ_ДанныеРегистра_Было.РанееИсправлялось КАК РанееИсправлялось,
		|		1 КАК Дельта
		|	ИЗ
		|		ВТ_ДанныеРегистра_Было КАК ВТ_ДанныеРегистра_Было
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеРегистра_Стало.База1С,
		|		ВТ_ДанныеРегистра_Стало.Исключение,
		|		ВТ_ДанныеРегистра_Стало.Решение,
		|		ВТ_ДанныеРегистра_Стало.ДатаИсправления,
		|		ВТ_ДанныеРегистра_Стало.РанееИсправлялось,
		|		-1
		|	ИЗ
		|		ВТ_ДанныеРегистра_Стало КАК ВТ_ДанныеРегистра_Стало) КАК ВТ_ДанныеРегистра
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеРегистра.База1С,
		|	ВТ_ДанныеРегистра.Исключение,
		|	ВТ_ДанныеРегистра.Решение,
		|	ВТ_ДанныеРегистра.ДатаИсправления,
		|	ВТ_ДанныеРегистра.РанееИсправлялось
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_ДанныеРегистра.Дельта) < 0";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		ИндексРезультата = МассивТекстовЗапроса.Количество() - 1;
		
		ТекстЗапроса =
		"УНИЧТОЖИТЬ ВТ_ДанныеРегистра_Было";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
		ТекстЗапроса =
		"УНИЧТОЖИТЬ ВТ_ДанныеРегистра_Стало";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатПакета = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	МенеджерВременныхТаблиц.Закрыть();

	Выборка = РезультатПакета[ИндексРезультата].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЕстьДанныеБыло Тогда
			
			Если НЕ ЗначениеЗаполнено(Выборка.Решение)
				И НЕ ЗначениеЗаполнено(Выборка.ДатаИсправления)
				И НЕ ЗначениеЗаполнено(Выборка.РанееИсправлялось)
				Тогда
				
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ДанныеИстории = Новый Структура("Решение,ДатаИсправления,РанееИсправлялось");
		ЗаполнитьЗначенияСвойств(ДанныеИстории, Выборка);
		
		ЖурналИсключений.ЗаписатьРеквизитыВИсторию(Выборка.База1С, Выборка.Исключение, ДанныеИстории);
		
	КонецЦикла;
	
КонецПроцедуры

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли