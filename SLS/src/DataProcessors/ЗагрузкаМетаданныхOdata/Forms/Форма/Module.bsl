
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Конфигурация") Тогда
		Объект.Конфигурация = Параметры.Конфигурация;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьМетаданныеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конфигурация1С", Объект.Конфигурация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИдентификаторыОбъектовМетаданныхКонфигураций.Ссылка КАК Ссылка,
	|	ИдентификаторыОбъектовМетаданныхКонфигураций.ПолноеИмя КАК ПолноеИмя,
	|	ИдентификаторыОбъектовМетаданныхКонфигураций.ПометкаУдаления КАК ПометкаУдаления,
	|	Ложь КАК Загружен
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовМетаданныхКонфигураций КАК ИдентификаторыОбъектовМетаданныхКонфигураций
	|ГДЕ
	|	ИдентификаторыОбъектовМетаданныхКонфигураций.Конфигурация1С = &Конфигурация1С";
	
	ТЧМТД = Запрос.Выполнить().Выгрузить();
	ТЧМТД.Индексы.Добавить("ПолноеИмя");
	
	//ДанныеСписка = МониторингСервисов.ДанныеСпискаВБазеПоПротоколуOData(
	ДанныеСписка = ЗапросыOdata.ДанныеСпискаВБазе(
		Объект.База,
		"Справочник.ИдентификаторыОбъектовМетаданных",
		120,
		"Description asc",
		"DeletionMark,Description,ПолноеИмя,Синоним,Имя,Parent_Key,Parent/Description,Parent/ПолноеИмя",
		,
		"Parent"
	);
	
	Для Каждого ОписаниеМТД ИЗ ДанныеСписка Цикл
		
		Если ОписаниеМТД["DeletionMark"] Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОписаниеМТД["Parent_Key"])
			ИЛИ ОписаниеМТД["Parent_Key"] = "00000000-0000-0000-0000-000000000000"
			Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиМТД = ТЧМТД.НайтиСтроки(Новый Структура("ПолноеИмя", ОписаниеМТД["ПолноеИмя"]));
		
		ОбъектМТД = Неопределено;
		Для Каждого СтрокаМТД Из СтрокиМТД Цикл
			СтрокаМТД.Загружен = Истина;
			ОбъектМТД = СтрокаМТД.Ссылка;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ОбъектМТД) Тогда
			ОбъектМТД = ОбъектМТД.ПолучитьОбъект();
			Если ОбъектМТД.ПометкаУдаления Тогда
				ОбъектМТД.УстановитьПометкуУдаления(Ложь);
				ОбъектМТД = ОбъектМТД.ПолучитьОбъект();
			КонецЕсли;
		Иначе
			ОбъектМТД = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.СоздатьЭлемент();
			ОбъектМТД.Конфигурация1С = Объект.Конфигурация;
			ОбъектМТД.ПолноеИмя = ОписаниеМТД["ПолноеИмя"];
		КонецЕсли;
		
		ОбъектМТД.Наименование = ОписаниеМТД["Description"];
		ОбъектМТД.Синоним = ОписаниеМТД["Синоним"];
		ОбъектМТД.Имя = ОписаниеМТД["Имя"];
		
		ОбъектМТД.Родитель = РодительПоПолномуИмени(ОбъектМТД.ПолноеИмя);
		
		ОбъектМТД.ОбменДанными.Загрузка = Истина;
		ОбъектМТД.Записать();
		
	КонецЦикла;
	
	Сообщить("Метаданные загружены");
	
КонецПроцедуры

&НаСервере
Функция РодительПоПолномуИмени(Знач ПолноеИмя) Экспорт
	
	ПолноеИмя = СокрЛП(СтрРазделить(ПолноеИмя, ".", Ложь)[0]);
	Результат = Неопределено;
	Если ПолноеИмя = "Справочник" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Справочники;
	ИначеЕсли ПолноеИмя = "Документ" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Документы;
	ИначеЕсли ПолноеИмя = "БизнесПроцесс" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.БизнесПроцессы;
	ИначеЕсли ПолноеИмя = "ЖурналДокументов" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.ЖурналыДокументов;
	ИначеЕсли ПолноеИмя = "Задача" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Задачи;
	ИначеЕсли ПолноеИмя = "Константа" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Константы;
	ИначеЕсли ПолноеИмя = "Обработка" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Обработки;
	ИначеЕсли ПолноеИмя = "Отчет" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Отчеты;
	ИначеЕсли ПолноеИмя = "ПланВидовРасчета" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.ПланыВидовРасчета;
	ИначеЕсли ПолноеИмя = "ПланВидовХарактеристик" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.ПланыВидовХарактеристик;
	ИначеЕсли ПолноеИмя = "ПланОбмена" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.ПланыОбмена;
	ИначеЕсли ПолноеИмя = "ПланСчетов" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.ПланыСчетов;
	ИначеЕсли ПолноеИмя = "Подсистема" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Подсистемы;
	ИначеЕсли ПолноеИмя = "РегистрБухгалтерии" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.РегистрыБухгалтерии;
	ИначеЕсли ПолноеИмя = "РегистрНакопления" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.РегистрыНакопления;
	ИначеЕсли ПолноеИмя = "РегистрРасчета" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.РегистрыРасчета;
	ИначеЕсли ПолноеИмя = "РегистрСведений" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.РегистрыСведений;
	ИначеЕсли ПолноеИмя = "Роль" Тогда
		Результат = Справочники.ИдентификаторыОбъектовМетаданныхКонфигураций.Роли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьМетаданные(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Конфигурация) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.База) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьМетаданныеНаСервере();
	
КонецПроцедуры
