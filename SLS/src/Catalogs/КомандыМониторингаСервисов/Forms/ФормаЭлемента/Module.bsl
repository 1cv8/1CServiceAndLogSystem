//// Весь функционал консоли кода взят тут:
//// https://github.com/BlizD/Tasks/releases/tag/1.0.5.015



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КонсольКода_ЗагрузитьИзМакета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КонсольКода_ПриОткрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ИсполняемыйКод = Элементы.КонсольКода_ПолеHTML.Документ.defaultView.getText();
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПолеHTMLДокументСформирован(Элемент)
	КонсольКода_ЗагрузитьИзТекстСодержания();
КонецПроцедуры

#Область КонсольКода

&НаСервере
Процедура КонсольКода_ЗагрузитьИзМакета()
	
	Макет_src = КонсольКода_ПолучитьМакет("КонсольКода_src");
	КонсольКода_АдресМакета = ПоместитьВоВременноеХранилище(Макет_src, Новый УникальныйИдентификатор());
	
КонецПроцедуры 

&НаКлиенте
Процедура КонсольКода_ПриОткрытии()
		
	НачатьПодключениеРасширенияРаботыСФайлами(
		Новый ОписаниеОповещения("КонсольКода_ПослеПодключенияРасширенияДляРаботыСФайлами", 
		ЭтаФорма));	
	
КонецПроцедуры 

&НаСервере
Функция КонсольКода_ПолучитьМакет(ИмяМакета)
	
	пОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат пОбъект.ПолучитьМакет(ИмяМакета);
	
КонецФункции

&НаСервере
Функция КонсольКода_ПолучитьТекстМакета(ИмяМакета)
	
	Макет = КонсольКода_ПолучитьМакет(ИмяМакета);
	Возврат СтрЗаменить(Макет.ПолучитьТекст(), Символы.ПС, " ");	
	
КонецФункции

&НаКлиенте
Процедура КонсольКода_ПослеПодключенияРасширенияДляРаботыСФайлами(Подключено, ДопПараметры) Экспорт
	
	Если Подключено Тогда
				
		КонсольКода_ИзвлечьИсходники();	
				
	Иначе
		
		#Если ВебКлиент Тогда
		Если ДопПараметры = Неопределено Тогда
			НачатьУстановкуРасширенияРаботыСФайлами(
				Новый ОписаниеОповещения("ПослеУстановкиРасширенияДляРаботыСФайлами", ЭтаФорма))	
		Иначе
			ПоказатьПредупреждение(, "К сожалению работа в веб-клиенте невозможна!");
		КонецЕсли;
		#КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ИзвлечьИсходники()
	
	Состояние("Инициализация...");
	//#Если ВебКлиент Тогда
	//КонсольКода_HTML = "https://salexdv.github.io/bsl_console/src/index.html";
	//ИсходникиЗагружены = Истина;
	//#Иначе
	НачатьПолучениеКаталогаВременныхФайлов(
		Новый ОписаниеОповещения("КонсольКода_ПриПолученииКаталогаВременныхФайлов", ЭтаФорма));	
	//#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПриПолученииКаталогаВременныхФайлов(ИмяКаталога, ДопПараметры) Экспорт
	
	КонсольКода_КаталогИсходников = ИмяКаталога + "bsl_console\";
	НачатьСозданиеКаталога(
		Новый ОписаниеОповещения("КонсольКода_ПослеСозданияКаталога", ЭтаФорма), 
		КонсольКода_КаталогИсходников);
		
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеСозданияКаталога(ИмяКаталога, ДопПараметры) Экспорт
	
	ФайлНаДиске = Новый Файл(КонсольКода_КаталогИсходников);
	ФайлНаДиске.НачатьПроверкуСуществования(
		Новый ОписаниеОповещения("КонсольКода_ПослеПроверкиСуществованияКаталога", 
		ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеПроверкиСуществованияКаталога(Существует, ДопПараметры) Экспорт
	
	Если Существует Тогда		
		ФайлНаДиске = Новый Файл(КонсольКода_КаталогИсходников + ".ver");
		ФайлНаДиске.НачатьПроверкуСуществования(
			Новый ОписаниеОповещения("КонсольКода_ПослеПроверкиСуществованияФайлаВерсии", 
			ЭтаФорма));
	Иначе		
		КонсольКода_ВывестиОшибку("Не удалось создать каталог для исходников", Истина);		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеПроверкиСуществованияФайлаВерсии(Существует, ДопПараметры) Экспорт
	
	Если Существует Тогда	
		ФайлНаДиске = Новый Файл(КонсольКода_КаталогИсходников + "index.html");
		ФайлНаДиске.НачатьПроверкуСуществования(
			Новый ОписаниеОповещения("КонсольКода_ПослеПроверкиСуществованияИндексногоФайла", 
			ЭтаФорма));
	Иначе
		КонсольКода_ИзвлечьИсходникиНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеПроверкиСуществованияИндексногоФайла(Существует, ДопПараметры) Экспорт
	
	Если Существует Тогда		
		КонсольКода_ИндексныйФайл = КонсольКода_ИндексныйФайл();
		НачатьКопированиеФайла(
			Новый ОписаниеОповещения("КонсольКода_ПослеКопированияИндексногоФайла", ЭтаФорма), 
			КонсольКода_КаталогИсходников + "index.html", КонсольКода_ИндексныйФайл);
	Иначе		
		КонсольКода_ИзвлечьИсходникиНаКлиенте();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ВывестиОшибку(Текст, ЗакрыватьКонсоль)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеКопированияИндексногоФайла(СкопированныйФайл, ДопПараметры) Экспорт
	
	КонсольКода_ПолеHTML = СкопированныйФайл;
	ИсходникиЗагружены = Истина;
	
	//Элементы.ПолеHTML.Документ.defaultView.setText(Объект.ТекстСодержания);
	Позиция = 1;
	УчитыватьОтступПервойСтроки = Ложь;
	
	//Элементы.ПолеHTML.Документ.defaultView.setText(
	//	Объект.ТекстСодержания, 
	//	Позиция, 
	//	УчитыватьОтступПервойСтроки);

КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ИзвлечьИсходникиНаКлиенте()
	
	НачатьУдалениеФайлов(
		Новый ОписаниеОповещения("КонсольКода_ПослеУдаленияВременныхФайлов", ЭтаФорма), 
		КонсольКода_КаталогИсходников, 
		"*.*");
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеУдаленияВременныхФайлов(ДопПараметры) Экспорт
	
	ИмяФайла = КонсольКода_КаталогИсходников + "bsl_console.zip";
	ДанныеМакета = ПолучитьИзВременногоХранилища(КонсольКода_АдресМакета);
	ДанныеМакета.НачатьЗапись(
		Новый ОписаниеОповещения("КонсольКода_ПослеЗаписиФайлаМакета", ЭтаФорма), 
		ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Функция КонсольКода_ИндексныйФайл()
	
	Возврат КонсольКода_КаталогИсходников + Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(), "ЧГ=0") + ".html";
	
КонецФункции

&НаКлиенте
Процедура КонсольКода_ПослеЗаписиФайлаМакета(ДопПараметры) Экспорт
	
	Попытка
		Файл = Новый ЧтениеZipФайла(КонсольКода_КаталогИсходников + "bsl_console.zip");
		Файл.ИзвлечьВсе(КонсольКода_КаталогИсходников);
		Файл = Новый ЗаписьТекста(КонсольКода_КаталогИсходников + ".ver");
		Файл.ЗаписатьСтроку(ТекущаяДата());
		Файл.Закрыть();
		КонсольКода_ИндексныйФайл = КонсольКода_ИндексныйФайл();
		НачатьКопированиеФайла(
			Новый ОписаниеОповещения("КонсольКода_ПослеКопированияИндексногоФайла", ЭтаФорма), 
			КонсольКода_КаталогИсходников + "index.html", 
			КонсольКода_ИндексныйФайл);
	Исключение
		КонсольКода_ВывестиОшибку("Не удалось извлечь исходники" + Символы.ПС + ОписаниеОшибки(), Истина);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ЗакрытьКонсоль()
	
	Если НЕ Объект.ПоказыватьКод Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонсольКода_ИндексныйФайл) Тогда
		НачатьУдалениеФайлов(Новый ОписаниеОповещения(
			"КонсольКода_ПослеУдаленияИндексногоФайла", ЭтаФорма), 
			КонсольКода_ИндексныйФайл);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ПослеУдаленияИндексногоФайла(ДопПараметры) Экспорт
	
	КонсольКода_ИндексныйФайл = "";
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольКода_ЗагрузитьИзТекстСодержания()
	
	//Если НЕ Объект.ПоказыватьКод Тогда
	//	Возврат;
	//КонецЕсли;
	
	Позиция = 1;
	УчитыватьОтступПервойСтроки = Ложь;
	
	Элементы.КонсольКода_ПолеHTML.Документ.defaultView.setText(
		Объект.ИсполняемыйКод, 
		Позиция, 
		УчитыватьОтступПервойСтроки);
	
КонецПроцедуры 

#КонецОбласти


