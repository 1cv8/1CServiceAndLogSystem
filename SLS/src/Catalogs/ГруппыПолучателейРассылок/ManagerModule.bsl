
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ДобавитьПолучателяВПриемник(Приемник, Получатель, Линк, ЗаполнениеПользователей = Ложь, ЗаполнитьПредставленияВСписке = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Получатель) Тогда
		Возврат;
	КонецЕсли;
	
	ИзПисьма 		= ТипЗнч(Приемник) = Тип("ИнтернетПочтовыеАдреса");
	ИзФормыСписком 	= ТипЗнч(Приемник) = Тип("СписокЗначений");
	
	Если ЗаполнениеПользователей И НЕ ИзПисьма Тогда
		
		Если ТипЗНЧ(Приемник) = Тип("СписокЗначений") Тогда
			Если Приемник.НайтиПоЗначению(Получатель) = Неопределено Тогда
				Приемник.Добавить(Получатель);
			КонецЕсли;
		Иначе
			Если Приемник.Найти(Получатель) = Неопределено Тогда
				Приемник.Добавить(Получатель);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Адрес = _Почта.ПолучитьАдресПользователя(Получатель, Линк);
		Если ЗначениеЗаполнено(Адрес) Тогда
			
			Если ИзПисьма Тогда
				НовПолучатель = Приемник.Добавить(Адрес);
			Иначе
				
				//Приемник.Добавить(Адрес, Получатель.Получатель);
				Если ТипЗНЧ(Приемник) = Тип("СписокЗначений") Тогда
					Если Приемник.НайтиПоЗначению(Адрес) = Неопределено Тогда
						Приемник.Добавить(Адрес, Получатель);
					КонецЕсли;
				Иначе
					Если Приемник.Найти(Адрес) = Неопределено Тогда
						Приемник.Добавить(Адрес);
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДобавитьПолучателей(Приемник, Источник, Линк, ДобавитьТекущего = Ложь, ЗаполнениеПользователей = Ложь,ЗаполнитьПредставленияВСписке = Ложь) Экспорт
	
	ИзПисьма 		= ТипЗнч(Приемник) = Тип("ИнтернетПочтовыеАдреса");
	ИзФормыСписком 	= ТипЗнч(Приемник) = Тип("СписокЗначений");
	
	Для Каждого Получатель Из Источник Цикл
		
		Если Получатель.Отключить Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьПолучателяВПриемник(Приемник, Получатель.Получатель, Линк, ЗаполнениеПользователей); 
		
	КонецЦикла;

	Если ДобавитьТекущего Тогда
		
		ТекПользователь = Пользователи.АвторизованныйПользователь();
		Если Источник.Найти(ТекПользователь, "Получатель") = Неопределено
			И Источник.Найти(ТекПользователь.ФизическоеЛицо, "Получатель") = Неопределено
			Тогда
			
			ДобавитьПолучателяВПриемник(Приемник, ТекПользователь.ФизическоеЛицо, Линк, ЗаполнениеПользователей); 
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
		
Процедура ЗаполнитьМассивАдресатовРассылки(Рассылка, Линк = Ложь, ИмяТЧ = "Получатели", мАдреса, ДобавитьТекущего = Ложь, ЗаполнениеПользователей = Ложь, ЗаполнитьПредставленияВСписке = Ложь) Экспорт
	
	ПроверитьДобавитьПолучателей(мАдреса, Рассылка[СокрЛП(ИмяТЧ)],				Линк, ДобавитьТекущего,	ЗаполнениеПользователей, ЗаполнитьПредставленияВСписке);
	ПроверитьДобавитьПолучателей(мАдреса, Рассылка["Группы" + СокрЛП(ИмяТЧ)],	Линк, Ложь,				ЗаполнениеПользователей, ЗаполнитьПредставленияВСписке);
	
КонецПроцедуры

Функция ВсеПолучателейГруппы(Рассылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Рассылка", Рассылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГруппыПолучателейРассылокПолучатели.Получатель КАК Получатель
	|ИЗ
	|	Справочник.ГруппыПолучателейРассылок.Получатели КАК ГруппыПолучателейРассылокПолучатели
	|ГДЕ
	|	ГруппыПолучателейРассылокПолучатели.Ссылка = &Рассылка
	|	И НЕ ГруппыПолучателейРассылокПолучатели.Отключить
	|	И ГруппыПолучателейРассылокПолучатели.Получатель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыПолучателейРассылокПолучатели.Получатель
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ГруппыПолучателейРассылокКопии.Получатель
	|ИЗ
	|	Справочник.ГруппыПолучателейРассылок.Копии КАК ГруппыПолучателейРассылокКопии
	|ГДЕ
	|	ГруппыПолучателейРассылокКопии.Ссылка = &Рассылка
	|	И НЕ ГруппыПолучателейРассылокКопии.Отключить
	|	И ГруппыПолучателейРассылокКопии.Получатель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыПолучателейРассылокКопии.Получатель";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Получатель");
	
КонецФункции

#КонецОбласти

#КонецЕсли