
Процедура ИзменитьПолучателейТестирование(Сообщение) Экспорт
	
	Если _МАА_Процедуры.ЭтоРабочаяБаза() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = "";
	Если Сообщение.Тексты.Количество() > 0 Тогда
		ТекстСообщения = Сообщение.Тексты[0];
	Иначе
		ТекстСообщения = Сообщение.Добавить("");
	КонецЕсли;
	
	ТекстСообщения.Текст = ТекстСообщения.Текст
		+ Символы.ПС
		+ "Отправлено из копии базы: " + СтрокаСоединенияИнформационнойБазы();
	
	Для Каждого ИмяКоллекции Из СтрРазделить("Получатели,Копии,СлепыеКопии", ",", Ложь) Цикл
		
		Если Сообщение[ИмяКоллекции].Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСообщения.Текст = ТекстСообщения.Текст
			+ Символы.ПС
			+ ИмяКоллекции + " было:";
		
		Для Каждого Получатель Из Сообщение[ИмяКоллекции] Цикл
			ТекстСообщения.Текст = ТекстСообщения.Текст
				+ Символы.ПС
				+ "   " + Получатель.Адрес;
		КонецЦикла;
		
	КонецЦикла;
	
	Сообщение.Получатели.Очистить();
	Сообщение.Копии.Очистить();
	Сообщение.СлепыеКопии.Очистить();
	
КонецПроцедуры

Функция ОтправкаПочты(Сообщение, ВыводитьСлужебныеСообщения = Истина, ПутькФайлу = "", ИмяСохраняемогоФайла = "",
	СохранятьВОчередьОшибочные = Истина, ОтправкаИзОчереди = Ложь, УЗПочты = Неопределено) Экспорт

	Тестирование = НЕ _МАА_Процедуры.ЭтоРабочаяБаза();
	Если Тестирование Тогда
		ИзменитьПолучателейТестирование(Сообщение);
		
		Сообщение.Получатели.Очистить();
		Сообщение.Копии.Очистить();
		Сообщение.СлепыеКопии.Очистить();
		Сообщение.Получатели.Добавить(ПолучитьАдресТекущегоПользователя());
		Если ПутькФайлу <> "" Тогда 
		КонецЕсли;
	КонецЕсли;
	
	ПроверкаНаПустыеАдреса(Сообщение);
	
	ПроверкаАдресатов(Сообщение);
	
	Если Сообщение.Тексты[0] = "" Тогда
		Возврат Ложь;
	Конецесли;
	
	Если Сообщение.Тема = "" Тогда
		Возврат Ложь;
	Конецесли;
	
	ИнПочта   = Новый ИнтернетПочта;            
	Если УЗПочты = Неопределено Тогда
		УЗПочты = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
	ИнПрофиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(УЗПочты, Ложь);
	Сообщение.Отправитель.Адрес = УЗПочты.АдресЭлектроннойПочты;
	
	РазмерВложения = 0;
	Для каждого Файл из Сообщение.Вложения Цикл
		РазмерВложения = РазмерВложения + Файл.Данные.Размер();
	КонецЦикла;
	Если РазмерВложения > 1024*1024*9 Тогда
		Сообщить("Размер вложения превышает допустимый предел! (10 мб)" + Символы.ПС + "Отправка письма невозможна.");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка            
		ИнПочта.Подключиться(ИнПрофиль);      
	Исключение
		Если ВыводитьСлужебныеСообщения Тогда
			Сообщить("При подключени к серверу произошла ошибка! Проверьте учетные данные профиля почты."+ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецЕсли;	
		Возврат Ложь;
	КонецПопытки;            
	
	БылаОшибка = Ложь;
	
	Если Сообщение.Получатели.Количество() ИЛИ Сообщение.Копии.Количество() ИЛИ Сообщение.СлепыеКопии.Количество() Тогда
	
		Попытка            
			ИнПочта.Послать(Сообщение);
			Если ВыводитьСлужебныеСообщения Тогда
				Сообщить("Письмо отправлено!");
			КонецЕсли;
		Исключение 
			Если ВыводитьСлужебныеСообщения Тогда
				ТекстСообщения = ОписаниеОшибки();
				Если СтрНайти(ТекстСообщения, "SMTP error code 3") Тогда
					Сообщить("Письмо отправлено!");
				ИначеЕсли СтрНайти(ТекстСообщения, "Command not allowed") Тогда
					ТекстСообщения = ТекстСообщения + Символы.ПС + "Необходимо проверить адресатов, возможно присутствуют отключенные почтовые ящики:" + Символы.ПС;
					Для каждого СтрТаб_Пол Из Сообщение.Получатели Цикл			
						ТекстСообщения = ТекстСообщения + ", " + СтрТаб_Пол.Адрес;				
					КонецЦикла;
					ТекстСообщения = ТекстСообщения + Символы.ПС;
					Для каждого СтрТаб_Пол Из Сообщение.Копии Цикл			
						ТекстСообщения = ТекстСообщения + ", " + СтрТаб_Пол.Адрес;				
					КонецЦикла;
					ТекстСообщения = ТекстСообщения + Символы.ПС;
					Для каждого СтрТаб_Пол Из Сообщение.СлепыеКопии Цикл			
						ТекстСообщения = ТекстСообщения + ", " + СтрТаб_Пол.Адрес;				
					КонецЦикла;
					БылаОшибка = Истина;
					ЗаписьЖурналаРегистрации("Ошибка отправки письма", УровеньЖурналаРегистрации.Ошибка, , , Сообщение.Тема + " " + ОписаниеОшибки());
					Сообщить("Адрес отправителя:"+Сообщение.Отправитель.Адрес ,СтатусСообщения.Важное);
					Сообщить(ТекстСообщения);
				Иначе
					БылаОшибка = Истина;
					ЗаписьЖурналаРегистрации("Ошибка отправки письма", УровеньЖурналаРегистрации.Ошибка, , , Сообщение.Тема + " " + ОписаниеОшибки());
					Сообщить("Адрес отправителя:"+Сообщение.Отправитель.Адрес ,СтатусСообщения.Важное);
					Сообщить(ТекстСообщения);
				КонецЕсли;	
			КонецЕсли;
			Если СохранятьВОчередьОшибочные Тогда
				ДобавитьПисьмоВЛоги(Сообщение);
			КонецЕсли;
		КонецПопытки;
		
		Если БылаОшибка Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПутькФайлу) Тогда
			ДвоичныеДанныеПисьма = Сообщение.ПолучитьИсходныеДанные();

			Если ЗначениеЗаполнено(ИмяСохраняемогоФайла) Тогда
				ИмяФайла = _МАА_Процедуры.УдалитьНедопустимыеСимволы(ИмяСохраняемогоФайла);
			Иначе
				ИмяФайла = _МАА_Процедуры.УдалитьНедопустимыеСимволы(Сообщение.Тема);
			КонецЕсли;
			
			ПолныйПутьКФайлу = ПутькФайлу + "\" + ИмяФайла;
			Если СтрДлина(ПолныйПутьКФайлу) > 251 Тогда
				ПолныйПутьКФайлу = Лев(ПолныйПутьКФайлу, 251);
			КонецЕсли;
					
			Попытка
				ДвоичныеДанныеПисьма.Записать(ПолныйПутьКФайлу + ".eml");
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
		Возврат Истина;
		
	Иначе
		
		ОписаниеОшибки = "Письмо не может быть отправлено, т.к. не указаны получатели!";
		ЗаписьЖурналаРегистрации("Ошибка отправки письма", УровеньЖурналаРегистрации.Ошибка, , , Сообщение.Тема + " " + ОписаниеОшибки);
		Сообщить(ОписаниеОшибки);
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

Функция ОтправкаПочтыLyncНовый(Сообщение, СписокФайлов = Неопределено, ПутькФайлу = "", ОтветКому = "", ИмяСохраняемогоФайла = "", ВыводитьСлужебныеСообщения = Истина,
	ОтправкаИзОчереди = Ложь, УЗПочты = Неопределено) Экспорт
	
	Тестирование = Не _МАА_Процедуры.ЭтоРабочаяБаза();
	Если Тестирование Тогда
		ИзменитьПолучателейТестирование(Сообщение);
		Сообщение.Получатели.Очистить();
		Сообщение.Копии.Очистить();
		Сообщение.СлепыеКопии.Очистить();
		Сообщение.Получатели.Добавить(ПолучитьАдресТекущегоПользователя(Истина));
	КонецЕсли;
	
	Письмо = Новый COMОбъект("CDO.Message");
	Письмо.BodyPart.Charset = "utf-8";
	
	Если Сообщение.Тексты[0] = "" Тогда
		Возврат Ложь;
	Конецесли;
	
	Если Сообщение.Тема = "" Тогда
		Возврат Ложь;
	Конецесли;
	
	ПроверкаНаПустыеАдреса(Сообщение);
	
	Если УЗПочты = Неопределено Тогда
		УЗПочты = Константы.УчетнаяЗаписьLync.Получить();
	КонецЕсли;
	ИнПрофиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(УЗПочты, Ложь);
	
	CDO_СерверSMTP			= ИнПрофиль.АдресСервераSMTP;
	CDO_ПользовательSMTP	= ИнПрофиль.Пользователь;
	CDO_ПарольSMTP			= ИнПрофиль.ПарольSMTP;
	CDO_ПортSMTP			= ИнПрофиль.ПортSMTP;
	
	Письмо.from = Сообщение.Отправитель.Адрес;
	
	СообщениеПоле_Кому = "";	
	Для каждого СтрТаб из Сообщение.Получатели Цикл
		СообщениеПоле_Кому = СообщениеПоле_Кому + СтрТаб.Адрес + "; ";
	КонецЦикла;		
	Письмо.to   = СообщениеПоле_Кому;	
	
	СообщениеПоле_Копия = "";	
	Для каждого СтрТаб из Сообщение.Копии Цикл
		СообщениеПоле_Копия = СообщениеПоле_Копия + СтрТаб.Адрес + "; ";
	КонецЦикла;
	Письмо.Cc = СообщениеПоле_Копия;
	
	СообщениеПоле_СкрытаяКопия = "";	
	Для каждого СтрТаб из Сообщение.СлепыеКопии Цикл
		СообщениеПоле_СкрытаяКопия = СообщениеПоле_СкрытаяКопия + СтрТаб.Адрес + "; ";
	КонецЦикла;
	Письмо.bcc  = СообщениеПоле_СкрытаяКопия;
	
	Если ЗначениеЗаполнено(ОтветКому) Тогда
		Письмо.ReplyTo = ОтветКому;
	КонецЕсли;
	
	Для каждого СтрТаб из Сообщение.ОбратныйАдрес Цикл
		Письмо.ReplyTo = Письмо.ReplyTo + ?(ЗначениеЗаполнено(Письмо.ReplyTo), "; ", "") + СтрТаб.Адрес;
	КонецЦикла;
	
	Письмо.Subject = СтрЗаменить(Сообщение.Тема, "№", "N");
	
	Если СписокФайлов <> Неопределено Тогда
		Для каждого ИмяФайл из СписокФайлов Цикл
			Письмо.AddAttachment(ИмяФайл);
		КонецЦикла;
	Иначе
		Для каждого Вложение из Сообщение.Вложения Цикл
			КаталогВремФайлов = КаталогВременныхФайлов();
			
			ИмяФайла = Вложение.Имя;
			СохранитьВложениеПисьмаВФайл(Вложение, КаталогВремФайлов, ИмяФайла);
			Письмо.AddAttachment(КаталогВремФайлов + ИмяФайла);
			
		КонецЦикла;
	КонецЕсли;
	
	РазмерВложения = 0;
	Для каждого Файл из Сообщение.Вложения Цикл
		РазмерВложения = РазмерВложения + Файл.Данные.Размер();
	КонецЦикла;
	Если РазмерВложения > 1024*1024*7 Тогда
		Сообщить("Размер вложения превышает допустимый предел! (7 мб)" + Символы.ПС + "Отправка письма невозможна.");
		Возврат Ложь;
	КонецЕсли;
	
	Письмо.HTMLBody = Сообщение.Тексты[0].Текст;
	
	Письмо.HTMLBodyPart.Charset = "utf-8";
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/sendusing").Value = 2;
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpserver").Value = CDO_СерверSMTP;
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate").Value = 1;
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/sendusername").Value = CDO_ПользовательSMTP;
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/sendpassword").Value = CDO_ПарольSMTP;
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport").Value = CDO_ПортSMTP;
	Письмо.Configuration.Fields.Item("http://schemas.microsoft.com/cdo/configuration/smtpusessl").Value = 0;	
	Письмо.Configuration.Fields.Update();
	
	Попытка
		Письмо.Send();
		Если ВыводитьСлужебныеСообщения Тогда
			Сообщить("Письмо от "+Письмо.from+" успешно отправлено");		
		КонецЕсли;
	Исключение
		Если ВыводитьСлужебныеСообщения Тогда
			Сообщить("Ошибка отправки письма: " + ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецЕсли;
		ЗаписьЖурналаРегистрации("Ошибка отправки письма", УровеньЖурналаРегистрации.Ошибка, , , Письмо.Subject + " " + ОписаниеОшибки());
		Возврат Ложь;	
	КонецПопытки;	
	
	
	Если ЗначениеЗаполнено(ПутькФайлу) Тогда		
		Если ЗначениеЗаполнено(ИмяСохраняемогоФайла) Тогда
			ИмяФайла = _МАА_Процедуры.УдалитьНедопустимыеСимволы(ИмяСохраняемогоФайла);
		Иначе
			ИмяФайла = _МАА_Процедуры.УдалитьНедопустимыеСимволы(Сообщение.Тема);
		КонецЕсли;
		
		ПолныйПутьКФайлу = ПутькФайлу + "\" + ИмяФайла;
		Если СтрДлина(ПолныйПутьКФайлу) > 251 Тогда
			ПолныйПутьКФайлу = Лев(ПолныйПутьКФайлу, 251);
		КонецЕсли;
		
		Попытка
			Письмо.GetStream().SaveToFile(ПутькФайлу + "\" + ИмяФайла+".eml", 2);
		Исключение
			Сообщить("Не удалось сохранить письмо в папку " + ПутькФайлу + "\" + ИмяФайла+".eml");
			ЗаписьЖурналаРегистрации(
				"Ошибка сохранения письма",
				УровеньЖурналаРегистрации.Ошибка,,,
				"Ошибка сохранения письма в " + ПутькФайлу + "\" + ИмяФайла+".eml"
					+ Символы.ПС
					+ ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьАдресТекущегоПользователя(АдресЛинк = Ложь, КЛ = Ложь) Экспорт
	
	Если АдресЛинк = Ложь Тогда
		Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователи.АвторизованныйПользователь(), Справочники.ВидыКонтактнойИнформации.EmailПользователя, Истина);
	Иначе
		Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователи.АвторизованныйПользователь(), Справочники.ВидыКонтактнойИнформации.EmailПользователя, Истина);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьАдресПользователя(Пользователь, АдресЛинк = Ложь, КЛ = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		Если АдресЛинк = Ложь Тогда
			Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, Справочники.ВидыКонтактнойИнформации.EmailПользователя, Истина);
		Иначе
			Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, Справочники.ВидыКонтактнойИнформации.EmailПользователя, Истина);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Если АдресЛинк = Ложь Тогда
			Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица, Истина);
		Иначе
			Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица, Истина);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.ПочтовыеГруппыИЧаты") Тогда
		Если АдресЛинк = Ложь Тогда
			Возврат Пользователь.EMail;
		Иначе
			Возврат Пользователь.EMailLink;
		КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Процедура ПроверкаНаПустыеАдреса(Сообщение)
	
	ПроверкаПолучателейНаПустыеАдреса(Сообщение.Получатели);
	ПроверкаПолучателейНаПустыеАдреса(Сообщение.Копии);
	ПроверкаПолучателейНаПустыеАдреса(Сообщение.СлепыеКопии);
	
КонецПроцедуры

Процедура ПроверкаПолучателейНаПустыеАдреса(Получатели)
	
	Сч = Получатели.Количество() - 1;
	Пока Сч >= 0 Цикл 
		Адрес = СокрЛП(Получатели[Сч].Адрес);       //*@*.ru  
		Если НЕ ЗначениеЗаполнено(Адрес) ИЛИ СтрДлина(Адрес) < 6 Тогда
			Получатели.Удалить(Сч);
		КонецЕсли; 
		Сч = Сч - 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаАдресатов(Сообщение) Экспорт 
	ПроверкаПолучателей(Сообщение.Получатели);
	ПроверкаПолучателей(Сообщение.Копии);
	ПроверкаПолучателей(Сообщение.СлепыеКопии);
КонецПроцедуры

Процедура ПроверкаПолучателей(Получатели)
	
КонецПроцедуры

//Для сохранения писем в логах которые не получилось отправить
Процедура ДобавитьПисьмоВЛоги(Сообщение)
		
	Попытка
		РегистрыСведений.УС_ОчередьПочта.СоздатьЗаписьИзСообщения(Сообщение,,ТекущаяДата(),Истина);
	Исключение
	КонецПопытки;		
		
КонецПроцедуры	

Процедура СохранитьВложениеПисьмаВФайл(Вложение, Знач ИмяКаталога, ИмяФайла) Экспорт
	
КонецПроцедуры

Процедура АрхивироватьОчередьПочты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УС_ОчередьПочта.Период КАК Период,
	|	УС_ОчередьПочта.УникальныйИдентификатор КАК УникальныйИдентификатор
	|ИЗ
	|	РегистрСведений.УС_ОчередьПочта КАК УС_ОчередьПочта
	|ГДЕ
	|	УС_ОчередьПочта.КогдаОтправить < &ДатаНач
	|
	|УПОРЯДОЧИТЬ ПО
	|	КогдаОтправить";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Сч = 0;
	КолВсего = Выборка.Количество();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		МЗПочта = РегистрыСведений.УС_ОчередьПочта.СоздатьМенеджерЗаписи();
		МЗПочта.Период						= Выборка.Период;
		МЗПочта.УникальныйИдентификатор		= Выборка.УникальныйИдентификатор;
		
		МЗПочта.Прочитать();
		
		Если МЗПочта.Выбран() Тогда
			
			МЗПочтаАрхив = РегистрыСведений.УС_ОчередьПочтаАрхив.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МЗПочтаАрхив, МЗПочта);
			
			МЗПочтаАрхив.Вложения = Неопределено;
			
			МЗПочтаАрхив.Записать(Ложь);
			МЗПочта.Удалить();
			
		КонецЕсли;
		
		Сч = Сч + 1;
		
		Если Сч % 200 = 0 Тогда
			ЗафиксироватьТранзакцию();
			#Если Клиент Тогда
				ОбработкаПрерыванияПользователя();
			#КонецЕсли
			НачатьТранзакцию();
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры
