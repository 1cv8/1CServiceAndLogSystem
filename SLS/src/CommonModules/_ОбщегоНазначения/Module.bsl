
Функция УсловияЗапросаПоНаборуЗаписей(НаборЗаписей, Запрос, ИмяТаблицы = "Т", ИмяПараметров = "Параметр") Экспорт
	
	ШаблонУсловия = "%1.%2 = &%3";
	
	МассивУсловий = Новый Массив;
	
	СчУсловий = 0;
	
	Для Каждого ЭлементОтбора Из НаборЗаписей.Отбор Цикл
		
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		СчУсловий = СчУсловий + 1;
		
		ИмяРеквизита = ЭлементОтбора.Имя;
		ИмяПараметра = ИмяПараметров + СчУсловий;
		
		ТекстУсловия = СтрШаблон(ШаблонУсловия,
			ИмяТаблицы,
			ИмяРеквизита,
			ИмяПараметра);
		
		МассивУсловий.Добавить(ТекстУсловия);
		
		Запрос.УстановитьПараметр(ИмяПараметра, ЭлементОтбора.Значение);
		
	КонецЦикла;
	
	Возврат МассивУсловий;
	
КонецФункции

Процедура ИзменитьРеквизитыДокументаНаСервере(ДокументСсылка, ИзмененныеРеквизиты, УпрощеннаяЗапись = Ложь, ДопСвойстваЗаписи = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		//// Романов 08/09/22
		//// Для корректного указания строки блокировки в тех. журнале
		//ОбщегоНазначения.тисЗаблокироватьСсылку(ДокументСсылка, Истина);
		ПространствоБлокировок = ДокументСсылка.Метаданные().ПолноеИмя();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПространствоБлокировок);
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ДокументСсылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ДокументСсылкаОбъект = ДокументСсылка.ПолучитьОбъект();
		НужнаЗапись = Ложь;
		
		Для Каждого ОписаниеРеквизита ИЗ ИзмененныеРеквизиты Цикл
			
			Если ДокументСсылкаОбъект[ОписаниеРеквизита.Ключ] <> ОписаниеРеквизита.Значение Тогда
				
				ДокументСсылкаОбъект[ОписаниеРеквизита.Ключ] = ОписаниеРеквизита.Значение;
				НужнаЗапись = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НужнаЗапись Тогда
			
			// Романов 08/09/22
			Если ДопСвойстваЗаписи <> Неопределено Тогда
				Для Каждого ОписаниеДопСвойства Из ДопСвойстваЗаписи Цикл
					ДокументСсылкаОбъект.ДополнительныеСвойства.Вставить(ОписаниеДопСвойства.Ключ, ОписаниеДопСвойства.Значение);
				КонецЦикла;
			КонецЕсли;
			
			Если УпрощеннаяЗапись Тогда
				ДокументСсылкаОбъект.Записать();
			ИначеЕсли ДокументСсылкаОбъект.Проведен Тогда
				ДокументСсылкаОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Иначе
				ДокументСсылкаОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		
		ТекстОшибки =
			"Ошибка изменения документа: "
			+ ДокументСсылка
			+ Символы.ПС
			+ ОписаниеОшибки();
		
		ВызватьИсключение (ТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура Пауза(Секунд) Экспорт
	
	Миллисекунды = Секунд * 1000;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	ПараметрыОжидания = ОбщегоНазначенияКлиентСервер.ПараметрыЗапускаПрограммы();
	ПараметрыОжидания.ДождатьсяЗавершения = Истина;
	
	ОбщегоНазначенияКлиентСервер.ЗапуститьПрограмму(СтрШаблон("ping -n 1 -w %1 127.255.255.255", Формат(Миллисекунды, "ЧДЦ=0; ЧГ=")), ПараметрыОжидания);
	
	Пока (ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера) < Миллисекунды Цикл
		// Если нужное время не прошло, оставшееся время дождемся в цикле.
	КонецЦикла;
	
КонецПроцедуры
